% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/entity-attribute-value.R
\name{eav_metadata_create}
\alias{eav_metadata_create}
\title{Create a facile covariate definition file from a sample \code{pData} data.frame}
\usage{
eav_metadata_create(
  x,
  ignore = c("dataset", "sample_id"),
  covariate_def = list()
)
}
\arguments{
\item{x}{a \code{pData} \code{data.frame}}

\item{ignore}{the columns in \code{x} to not create covariate definitions for.
This defaults to \code{c("dataset", "sample_id")} since we are in the
facileverse.}

\item{covariate_def}{a named list of covariate definitions. The names of
this list are the names the covariates will be called in the target
\code{FacileDataSet}. The values of the list are:
\itemize{
\item \code{varname}: a \code{character()} of the column name(s) in \code{x} that this
sample covariate was derived from. If more than one column is to be used
for the facile covariate conversion (e.g. if we are encoding survival),
then provide a \code{length() > 1} character vector with the names of the
columns in \code{x} that were used for the encoding. If this were encoding
survival this might be \code{c("time", "event")} columns, in that order.
\item \code{label}: a human readable label to use for this covariate in user facing
scenarios in the facileverse.
\item \code{class}: the "facile class" of the covariate. This can either be
\code{categorical}, \code{real}, or \code{right_censored} (for survival).
\item \code{levels}: (optional) if you want a \code{categorical} to be treated as a
factor if it isn't already encoded as such in the \code{pData} itself, or if
you want to rearrange the factor levels.
\item \code{type}: (optional) this is used a a "grouping" level, particularly in
the FacileExplorer.
}}
}
\value{
a list-of-lists that encodes the \code{sample_covariate} section of the
\code{meta.yaml} file for a \code{FacileDataSet}. Each list element will have the
following elements:
\enumerate{
\item arguments: the name(s) of the columns from \code{x} used in this covariate
description.
\item class: \code{"real"}, \code{"categorical"}, (survival needs a bity of work)
\item description: a string with minimal description
\item type: this isn't really used in the dataset, but another application
might want to group covariates by type.
}
}
\description{
Sample covariates (aka \code{pData}) are encoded in an
\href{https://en.wikipedia.org/wiki/Entity-attribute-value_model}{entity-attribute-value (EAV) table}.
Metadata about these covariates are stored in a \code{meta.yaml} file in the
\code{FacileDataSet} directory which enables the \code{FacileDataSet} to cast the value
stored in the EAV table to its native R type. This function generates the
list-of-list structure to represent the \code{sample_covariates} section of the
\code{meta.yaml} file.
}
\details{
For simple \code{pData} covariates, each column is treated independently from the
rest. There are some types of covariates which require multiple columns for
proper encoding, such as encoding of survival information, which requires
a pair of values that indicate the "time to event" and the status of the
event (death or censored). In these cases, the caller needs to provide an
entry in the \code{covariate_def} list that describes which \code{pData} columns
(\code{varname}) goes into the single facile covariate value.

Please refer to the \strong{Encoding Survival Covariates} section for a more
detailed description of how to define encoding survival information into the
EAV table using the \code{covariate_def} parameter. Further examples of how to
encode other complex attributes will be added as they are required, but you
can reference the \strong{Encoding Arbitrarily Complex Covariates} section for
some more information.
}
\section{Encoding Survival Covariates}{


UPDATE: FacileData can now use survival data encoded as a \code{survival::Surv} object
stored as a pData column. Read on for the original encoding strategy, which
is still implemented.

Survival data in R is typically encoded by two vectors. One vector that
indicates the "time to event" (tte), and a second to indicate whether or not
the denoted tte is an "event" (1) or "censored" (0).

Normally these vectors appear as two columns in an experiment's \code{pData},
and therefore need to be encoded into the \code{FacileDataSet}'s EAV table. To do
so, the pair of vectors are turned into a signed numeric value. The absolute
value of the numeric indicates the "time to event" and the sign of the value
indicates its censoring status.

Let's assume we have \code{tte_OS} and \code{event_OS} column that are used to encode
a patient's overall survival (time and censor status). To store this as an
"OS" covariate in the EAV table, a \code{covariate_def} list-of-list definition
that captures this encoding would look like this:

\if{html}{\out{<div class="sourceCode">}}\preformatted{covariate_def <- list(
  OS=list(
    class="right_censored",
    arguments=list(time="tte_OS", event="event_OS"),
    label="Overall Survival",
    type="clinical",
    description="Overall survival in days"))
}\if{html}{\out{</div>}}

Note how the name of the list-entry in \code{covariate_def} defines the name of
the covariate in the \code{FacileDataSet}. The \code{class} entry for the \code{OS}
definition indicates the type of variable this is. The \code{arguments} section
is only used when encoding a wide \code{pData} into the EAV value column.
\code{names(arguments)} correspond to the parameters in the
\verb{[eav_encode_right_censored()]} function, and their values are the columns in
the target \code{pData} that populate the respective parameters in the function
call. The analagous \code{meta.yaml} entry in the \code{sample_covariates} section for
the \code{"OS"} \code{covariate_def} entry looks like so:

\if{html}{\out{<div class="sourceCode">}}\preformatted{sample_covariates:
  OS:
    class: right_censored
    arguments:
      time: tte_OS
      event: event_OS
    label: "Overall Survival"
    type: "clinical"
    description: "Overall survival in days"
}\if{html}{\out{</div>}}
}

\section{Encoding Arbitrarily Complex Covariates}{


To encode a new type of complex covariate from a wide \code{pData} data.frame,
we need to:
\enumerate{
\item Specify a new \code{class} (like \code{"right_censored"}) for use within a
\code{FacileDataSet}.
\item Define an \verb{eav_encode_<class>(arg1, arg2, ...)} function which takes the
R data vectors (arg1, arg2) and converts them into a single value for the
EAV table.
\item Define a \verb{eav_decode_<class>(x, attrname, def, ...)} function which takes
the single value in the EAV table and casts it back into the R-naive data
vector(s).
\itemize{
\item \code{x} is the vector of (character) values from the EAV table
\item \code{attrname} is the name of the covariate in the EAV table
\item \code{def} is the definition-list for this covariate.
\item \code{...} allows each decode function to be further customized.
}
}
}

\examples{
# covariate_def definition to take tte_OS and tte_event columns and turn
# into a facile "OS" right_censored survival covariate
cc <- list(
  OS=list(
    arguments=list(time="tte_OS", event="event_OS"),
    label="Overall Survival",
    class="right_censored",
    type="clinical",
    description="Overall survival in days"))
}
