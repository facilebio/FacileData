% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api.R, R/biocbox.R
\name{biocbox}
\alias{biocbox}
\alias{biocbox.facile_frame}
\title{Materialize a Bioconductor assay container from some facile object.}
\usage{
biocbox(x, ...)

\method{biocbox}{facile_frame}(
  x,
  class = NULL,
  assay_name = NULL,
  features = NULL,
  sample_covariates = NULL,
  feature_covariates = NULL,
  normalized = FALSE,
  with_fds = FALSE,
  custom_key = Sys.getenv("USER"),
  ...
)
}
\arguments{
\item{x}{A facile object}

\item{sample_covariates}{If \code{NULL} (default), all sample covariates will
be included over samples in x. If a data.frame, we will treat the
extra columns as custom covariates, and include them in the outgoing
box, along with the internal ones.}
}
\description{
Most often, this will be from some facile_frame to create a Bioconductor
assay container object, but this function can be overloaded for other
purposes.
}
\details{
The FacileAnalysis package, for example, uses this function to materialize
bioconductor objects of different flavors from different analysis results,
ie. a DGEList, or perhaps a limma fit object, etc.
}
\section{facile_frame}{

We can materialize a Bioconductor data container for a given assay over a set
of samples.

There is a default bioc class provided for different assay types, however
the class type can be overrided by the \code{class} parameter. This function
simply puts the assay data requested into the container. There is no
sepcial functionality that happens downstream of that (for instance,
DGEList lib.size calculated from the data that made its way into the DGEList)
}

