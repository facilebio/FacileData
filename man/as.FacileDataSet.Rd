% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as.FacileDataSet.R
\name{as.FacileDataSet}
\alias{as.FacileDataSet}
\alias{as.FacileDataSet.list}
\title{Converts a (list of) bioconductor assay containers into a FacileDataSet.}
\usage{
as.FacileDataSet(
  x,
  path,
  assay_name,
  assay_type,
  source_assay,
  assay_description = paste("Description for ", assay_name),
  dataset_name = "DEFAULT_NAME",
  dataset_meta = NULL,
  organism = "unspecified",
  page_size = 2^12,
  cache_size = 2e+05,
  chunk_rows = 5000,
  chunk_cols = "ncol",
  chunk_compression = 5,
  covariate_def = NULL,
  ...
)

\method{as.FacileDataSet}{list}(
  x,
  path,
  assay_name,
  assay_type,
  source_assay = NULL,
  assay_description = paste("Description for ", assay_name),
  dataset_name = "DEFAULT_NAME",
  dataset_meta = list(),
  organism = "unspecified",
  prune_dataset_meta = TRUE,
  page_size = 2^12,
  cache_size = 2e+05,
  chunk_rows = 5000,
  chunk_cols = "ncol",
  chunk_compression = 5,
  covariate_def = NULL,
  ...
)
}
\arguments{
\item{x}{The bioconductor assay container to extract data from}

\item{path}{the directory to create the faciledataset into. Will create
a default directory in the current working directory if not specified.
This directory should not yet exist.}

\item{assay_name}{The name to use when storing the assay matrix from
\code{x} into the faciledataset.}

\item{assay_type}{what type of assay is this? rnaseq, microarray, nanostring,
isoseq (isoform expression), etc.}

\item{source_assay}{the name of the assay element in \code{x} to extract
for use.}

\item{dataset_name}{the \code{name} attribute of the FacileDataSet \code{meta.yaml}
file.}

\item{dataset_meta}{a named (by names(x)) with meta data about the datasets
that appear in the list of datasets \code{x}. List elements per dataset should
minimally include a \code{description} and \code{url} string.}

\item{organism}{This is used to fetch the appropriate genesets when this
dataset is used with the facileexplorer. Put species name here, ie.
\code{"Homo sapiens"}, \code{"Mus musculus"}, etc. Default is \code{"unspecified"},
which isn't really helpful.}

\item{page_size}{parameter to tweak SQLite}

\item{cache_size}{parameter to tweak SQLite}

\item{chunk_rows}{parameter to tweak HDF5}

\item{chunk_cols}{parameter to tweak HDF5}

\item{chunk_compression}{parameter to tweak HDF5}

\item{...}{more args}
}
\value{
a \code{\link[=FacileDataSet]{FacileDataSet()}}
}
\description{
This function assumes you are only extracting one assay from the assay
container and creating a \code{FacileDataSet} from it. If the bioc-containers
you are using can support more than one assay, specify which one to extract
using the \code{source_assay} parameter, otherwise the first assay in the
container will be taken. The \code{source_assay} you are using to initialize the
\code{FacileDataSet} here will become its \code{default_assay} when its used later.

The \code{feature_info} table is populated by the particular \code{fData} (\code{mcols},
\code{y$genes}, etc.) from the assay container. The \code{pData} from the assay
container will be ingested as well, so do your best to ensure that this
represents the most complete version of the pData for the FacileDataSet
you will be creating.
}
\details{
A \code{FacileDataSet} can be created from a number of different Bioconductor
containers, such as a \code{Biobase::ExpressionSet},
\code{SummarizedExperiment::SummarizedExperiment}, or an \code{edgeR::DGEList}. To
create a \code{FacileDataSet} that spans multiple Bioc containters, i.e. you may
have one ExpressionSet per indication in the TCGA. You can make
\code{FacileDataSet} to encompass the data from \emph{all} of these indications by
providing a \code{list} of \code{ExpressionSet}s. The \code{list} should have its \code{names()}
set to each of the TCGA indications ("BLCA", "BRCA", etc.) the data came
from.
}
\section{Sample Covariates}{


The \code{pData} data.frame object will be picked off from all of the containers
provided in the list of datasets you are using to create the FacileDataSet.
\code{dataset} and \code{sample_id} columns will be forcibly added (or modified) as
columns to all of the individual \code{pData} data.frames.

In order to insert the entirety of the \code{pData} elements into the internal
\code{sample_covariate} table, we rely on the \code{dplyr::bind_rows} function to
create an uber \code{data.frame} which will be converted into an
entity-attribute-value table. Note that when row-binding, columns are matched
by name, and any missing columns with be filled with \code{NA}.

\code{ExpressionSet} pData \code{data.frames} should have an attribute called 'label', which
will be a named character vector with a description for each column. In the case of
a \code{SummarizedExperiment}, the \code{colData} should have named list in the \code{metadata}
slot with a character description of each column.

\code{ExpressionSet}s should have a short textual description of the facet/dataset in
the \code{annotation} slot. Similarly, \code{SummarizedExperiment}s should have a list
in the \code{metadata} slot with \code{url} and \code{description} for the facet/dataset.

Please ensure that the covariates across the \code{pData} data.frames have already
been harmonized!
}

\section{Feature meta-information}{


The feature information (aka "fData") are stored in an internal
\code{feature_info} SQLite table within the \code{FacileDataSet}. The information to
populate this table will be retrieved from the corresponding \code{fData}-like
\code{data.frame} from \strong{the first} given bioc-container in the list.
This \code{data.frame} must define the following columns:
\itemize{
\item "feature_type": \code{string} that defines the feature space, it can be anything
but historical accident may have given special meaning to \code{"entrez"},
\code{"ensgid"}, \code{"enstid"}, and \code{"genomic"}.
\item "feature_id": \code{string}
\item "name": \code{string}
\item "meta": \code{string}
\item "effective_length": \code{integer}
\item "source": \code{string}
}
}

