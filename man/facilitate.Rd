% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api.R
\name{facilitate}
\alias{facilitate}
\title{Converts an arbitrary object into one that works in the facile ecosystem.}
\usage{
facilitate(x, ...)
}
\arguments{
\item{x}{A non-facile object that we want to bring into the facile ecosystem}

\item{...}{we're going to need a lot of flexibility in the implementation of
this function for different types of analyses}
}
\value{
A facile-subclass of \code{x} that can take advantage of the interactive
facile ecosystem.
}
\description{
There will be many times when the particular analysis you want to conduct
is not well supported in the facileverse. In this case, we will endeavor
to implement ways for you to take these results and bring them back into
the facile ecosystem so that you can benefit from the interactivity provided
therein.
}
\details{
We'll want to define \code{facilitate()} over a wide variety of objects. For
instance:
\itemize{
\item \code{facilitate(a_DGElist)} would convert an \code{\link[edgeR:DGEList]{edgeR::DGEList()}} object into
a \code{FacileDGEList}, which is just the same DGEList that implements the
FacileData API. This is a work in progress and will be implemented in the
FacileBioc package.
\item You might perform a differential expression analysis using standard a
standard limma pipeline, but you'll want to be able to drop this result
into the facile ecosystem provided in the FacileAnalysis package.
The particulars of this \code{faciltate()} implementation would be defined in
the FacileAnalysis package, and migth look something like this:

\if{html}{\out{<div class="sourceCode">}}\preformatted{fit <- eBayes(lmFit(elist, design))
limma.res <- topTable(fit, coef = "something", n = Inf)
facile.res <- facilitate(elist, fit, limma.res)
}\if{html}{\out{</div>}}
}

It's not clear how well well we'll be able to do this, or if this is even
the right way to do it, but we'll need to do something.
}
\seealso{
https://github.com/facilebio/FacileBiocData
}
